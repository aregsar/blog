#test commands to build and run this dockerfile
#docker build . -f Dockerfile-app -t aregsar/phpfpm-prod
#docker run -p 9000:9000 aregsar/phpfpm-prod

#todo: add bootstrap/cache/* to dockerignore?


#
# build stage 
#
FROM composer:1.6.3 AS build

WORKDIR /app

#only copy composer files so we won't install deps if other files change
COPY composer.json composer.lock ./

#composer autoloader needs to scan files in database directory
COPY database ./database

#create vendors directory and installs dependancies from composer.json
RUN composer install --no-scripts --no-interaction

#copy all sources minus .dockerignore 
#COPY ./ ./
COPY app ./app
COPY bootstrap ./bootstrap
COPY config ./config
COPY public/index.php ./public/index.php
COPY public/mix-manifest.json ./public/mix-manifest.json
COPY resources/lang ./resources/lang
COPY resources/views ./resources/views
COPY routes ./routes
COPY storage ./storage
COPY tests ./tests
#COPY .env ./.env
#COPY artisan ./artisan
COPY phpunit.xml ./phpunit.xml
#COPY server.php ./server.php

#
# run stage
#
FROM php:7.2.2-fpm-alpine

#todo: should do this in build stage and copy installed file from there
RUN docker-php-ext-install pdo_mysql

WORKDIR /var/www

#copy over built application
COPY --from=build /app ./

RUN chown -R www-data:www-data ./bootstrap/cache ./storage

EXPOSE 9000

CMD ["php-fpm"]