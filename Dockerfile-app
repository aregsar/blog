#
# build stage 
#
FROM composer:1.6.3 AS build

WORKDIR /app

#only copy composer files so we won't install deps if other files change
COPY composer.json composer.lock ./

#create vendors directory and installs dependancies from composer.json
#note --no-dev option requires using .env.prod
#note --no-autoloader option requires running composer dump-autoload
RUN composer install \
    --ignore-platform-reqs \
    --no-ansi \
    --no-autoloader \
    --no-dev \
    --no-interaction \
    --no-scripts

#copy all required files and directories 
COPY resources/lang ./resources/lang
COPY public/index.php ./public/index.php
COPY bootstrap ./bootstrap
COPY public/mix-manifest.json ./public/mix-manifest.json
COPY database ./database
COPY config ./config
COPY routes ./routes
COPY resources/views ./resources/views
COPY app ./app
COPY storage ./storage

#uncomment test files in case we want to pass tests before image is built
#COPY tests ./tests
#COPY phpunit.xml ./phpunit.xml

#artisan required for composer dump-autoload command
COPY artisan ./artisan 

#should we just copy everything instead of individual files and directories?
#COPY ./ ./ 

#generate classmap
RUN composer dump-autoload --optimize --classmap-authoritative

#combine all config files in config directory into a single file and write it to the storage directory
#RUN php artisan config:cache


#
# run stage
#
FROM php:7.2.2-fpm-alpine

#todo: should do this in build stage and copy installed file from there
RUN docker-php-ext-install pdo_mysql

WORKDIR /var/www

#copy over built application
COPY --from=build /app ./

RUN chown -R www-data:www-data ./bootstrap/cache ./storage

EXPOSE 9000

CMD ["php-fpm"]