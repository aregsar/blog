
#test commands to build and run this dockerfile
#docker build . -f Dockerfile-web -t aregsar/nginx-prod
#docker run -p 8080:80 aregsar/nginx-prod

#
# build stage
# note: we explicity copy files and directories so we dont have to
# rely on .dockerignore file that is used for the Dockerfile-app
# this is because all our Dockerfile-* files are at projet root
#
FROM node:8.9.4 AS build

WORKDIR /app

# install dependencies (creates node_modules, updates yarn.lock)
COPY package.json yarn.lock ./
RUN yarn

# build assets
COPY resources/assets ./resources/assets
COPY webpack.mix.js ./
RUN yarn prod

# copy files
COPY public/favicon.ico ./public/favicon.ico
COPY public/robots.txt ./public/robots.txt
COPY public/index.html ./public/index.html

#
# run stage 
#
FROM nginx:1.12-alpine

# replace content of default.conf with content of proxy.conf 
COPY docker/nginx/proxy.conf /etc/nginx/conf.d/default.conf
COPY --from=build /app/public /var/www/public

# forward request logs to Docker log collector
#RUN ln -sf /dev/stdout /var/log/nginx/access.log
#RUN ln -sf /dev/stderr /var/log/nginx/error.log

EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]



