
# steps to add docker and config files to a new project

cd into project directory run following commands:

touch .dockerignore-app
touch .dockerignore-web
touch Dockerfile-app
touch Dockerfile-web
touch docker-compose.yml
touch docker-build-app.sh
touch docker-build-web.sh
touch docker-build.sh
cp .env .env.prod
mkdir docker && cd docker
mkdir nginx
mkdir phpfpm
cd nginx
touch proxy.conf
touch nginx.conf
cd ../phpfpm
touch fpm-php.ini
touch cli-php.ini

#modify keys in .env.prod to:
#APP_ENV=production
#APP_DEBUG=false





==============

#minimal nginx server config in docker/nginx/proxy.conf

server{
  listen 80;
  location / {
    index  index.html;
    root /var/www/public;
  }
}

#the directory ./docker/nginx contains all nginx config files
#docker/nginx/proxy.conf contains the site configuration
#docker/nginx/nginx.conf contains the nginx configuration
#by default the nginx web root is /usr/share/nginx/html 
#but the nginx web root is overriden to /var/www/public in the docker/nginx/proxy.conf file


==========================

#this is a guide to how to specify paths for the Dockerfile-web COPY command

#copy contents of the local ./public directory into the /var/www/public directory of docker image
COPY ./public /var/www/public

#copy the local file ./docker/nginx/proxy.conf to destination file /etc/nginx/conf.d/default.conf in the docker image
COPY ./docker/nginx/proxy.conf /etc/nginx/conf.d/default.conf

#copy the local file ./docker/nginx-conf/nginx.conf  to destination file /etc/nginx/nginx.conf in the docker image
#COPY ./docker/nginx/nginx.conf   /etc/nginx/nginx.conf

#COPY ./docker/nginx/fastcgi.conf   /etc/nginx/fastcgi.conf
#COPY ./docker/nginx/fastcgi_params  /etc/nginx/fastcgi_params

#Or copy contents of local ./docker/nginx-conf directory into /etc/nginx directory of the docker image
#COPY ./docker/nginx    /etc/nginx

=========================
#basic php-fpm proxy.config
#note: fastcgi_pass app:9000; uses app service specified
#in docker-compose.yml
server {
    listen 80;
    index index.php index.html;
    root /var/www/public;

    location / {
        try_files $uri /index.php?$args;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}


=================

#default.config file
#from dockerfordevs-containerize-compose-file in local downloads folder

server {
    listen 80;
    
    root /var/www/html;
    index index.php index.html index.htm;
    access_log /dev/stdout;
    error_log /dev/stderr;
    error_page 404 /index.php;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { log_not_found off; access_log off; }

    location = /robots.txt { log_not_found off; access_log off; }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass phpserver:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}


==============
#nginx.config file
#from containerizing-software-application-docker in local downloads folder


#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        sub_filter_once off;
        sub_filter 'server_hostname' '$hostname';
        sub_filter 'server_address' '$server_addr:$server_port';
        sub_filter 'nginx_version' '$nginx_version';

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


